// Linke Alexis
// 18-9-2013
// M2-IVI
// VisA
// TP2 : Segmentation d’une image de luminance.
// Binarisation d'une image de luminance bruitée par méthode Otsu.
 
macro "binarisation_otsu" 
{
	image = getImageID();

	W = getWidth();
	H = getHeight();

	run("Duplicate...", "title=binarisee");
	image_binaire = getImageID();

	// Récupération de l'histogramme.
	getHistogram (level,histo,256);
	proba = newArray(256);
	omega0 = newArray(256);
	omega1 = newArray(256);	
	mu0 = newArray(256);
	mu1 = newArray(256);	
	sigmaB2 = newArray(256);
 
	print("Binarisation par méthode Otsu.\n");
 
	// Définition des omega et mu initiaux. 
	omega0[0] = histo[0];
	omega1[0] = H*W - omega0;

	mu0[0] = 0;
	mu1[0] = 0;

	// Valeur max de sigmaB².
	max_sigmaB2 = 0;
	// Indice du max.
	i_max = 0;
	
	for (t=1; t<256; t++) 
	{
		// Mise à jour des omega et mu.
		for (i=0; i<=t; i++) omega0[t] += histo[i];		
		for (i=t+1; i<256; i++) omega1[t] += histo[i];		
		for (i=0; i<=t; i++) mu0[t] += (i * histo[i]) / omega0[t];
		for ( i =t+1 ; i<= 255; i++) mu1[t] += (i * histo[i]) / omega1[t];

		// Calcul de sigmaB².
		sigmaB2[t] = (omega0[t]*omega1[t] / H*W) * pow(mu1[t]-mu0[t], 2);
		
		// Recherche du max de sigmaB².
		if (sigmaB2[t] > max_sigmaB2) {
			  max_sigmaB2 = sigmaB2[t];
			  i_max = t;
		}		
	}
 
	selectImage(image_binaire);
	print ("seuil i_max=",i_max);
	setThreshold(0,i_max);
	run("Convert to Mask");
}	